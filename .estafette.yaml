builder:
  track: dev

labels:
  app-group: estafette-ci
  team: estafette-team
  language: proto

version:
  semver:
    major: 0
    minor: 0

stages:
  git-clone:
    image: extensions/git-clone:dev
    shallow: false

  prototool-lint:
    image: uber/prototool:1.8.1
    commands:
    - prototool lint

  prototool-compile:
    image: uber/prototool:1.8.1
    commands:
    - prototool compile

  prototool-break-check:
    image: uber/prototool:1.8.1
    commands:
    - git branch --track master origin/master || true
    - prototool break check --git-branch master

  clone-golang:
    image: extensions/git-clone:dev
    repo: estafette-ci-contracts-golang
    branch: master
    subdir: generated/golang/github.com/estafette/estafette-ci-contracts-golang

  clone-java:
    image: extensions/git-clone:dev
    repo: estafette-ci-contracts-java
    branch: master
    subdir: generated/java

  clone-csharp:
    image: extensions/git-clone:dev
    repo: estafette-ci-contracts-csharp
    branch: master
    subdir: generated/csharp

  clone-python:
    image: extensions/git-clone:dev
    repo: estafette-ci-contracts-python
    branch: master
    subdir: generated/python

  clone-cpp:
    image: extensions/git-clone:dev
    repo: estafette-ci-contracts-cpp
    branch: master
    subdir: generated/cpp

  clone-ruby:
    image: extensions/git-clone:dev
    repo: estafette-ci-contracts-ruby
    branch: master
    subdir: generated/ruby

  clone-objc:
    image: extensions/git-clone:dev
    repo: estafette-ci-contracts-objc
    branch: master
    subdir: generated/objc

  remove-previous-generated-files:
    image: uber/prototool:1.8.1
    shell: /bin/bash
    commands:
    - shopt -s globstar
    - rm -rf generated/**/*.go || true
    - rm -rf generated/**/*.java || true
    - rm -rf generated/**/*.cs || true
    - rm -rf generated/**/*.py || true
    - rm -rf generated/**/*.cc || true
    - rm -rf generated/**/*.h || true
    - rm -rf generated/**/*.m || true
    - rm -rf generated/**/*.rb || true

  prototool-generate:
    image: uber/prototool:1.8.1
    commands:
    - prototool generate

  git-push-and-tag-golang:
    image: golang:1.13.1-alpine3.10
    commands:
    - apk add git
    - cd generated/golang/github.com/estafette/estafette-ci-contracts-golang
    - go mod tidy
    - go test ./...
    - git config --global user.email "bot@estafette.io"
    - git config --global user.name "Estafette bot"
    - git add --all
    - git commit --allow-empty -m "v${ESTAFETTE_BUILD_VERSION}"
    - git push origin master
    - git tag --force v${ESTAFETTE_BUILD_VERSION}
    - git push --force origin v${ESTAFETTE_BUILD_VERSION}
    when:
      status == 'succeeded' &&
      branch == 'master'

  git-push-and-tag-java:
    image: uber/prototool:1.8.1
    commands:
    - cd generated/java
    - git config --global user.email "bot@estafette.io"
    - git config --global user.name "Estafette bot"
    - git add --all
    - git commit --allow-empty -m "v${ESTAFETTE_BUILD_VERSION}"
    - git push origin master
    - git tag --force v${ESTAFETTE_BUILD_VERSION}
    - git push --force origin v${ESTAFETTE_BUILD_VERSION}
    when:
      status == 'succeeded' &&
      branch == 'master'

  git-push-and-tag-csharp:
    image: uber/prototool:1.8.1
    commands:
    - cd generated/csharp
    - git config --global user.email "bot@estafette.io"
    - git config --global user.name "Estafette bot"
    - git add --all
    - git commit --allow-empty -m "v${ESTAFETTE_BUILD_VERSION}"
    - git push origin master
    - git tag --force v${ESTAFETTE_BUILD_VERSION}
    - git push --force origin v${ESTAFETTE_BUILD_VERSION}
    when:
      status == 'succeeded' &&
      branch == 'master'

  git-push-and-tag-python:
    image: uber/prototool:1.8.1
    commands:
    - cd generated/python
    - git config --global user.email "bot@estafette.io"
    - git config --global user.name "Estafette bot"
    - git add --all
    - git commit --allow-empty -m "v${ESTAFETTE_BUILD_VERSION}"
    - git push origin master
    - git tag --force v${ESTAFETTE_BUILD_VERSION}
    - git push --force origin v${ESTAFETTE_BUILD_VERSION}
    when:
      status == 'succeeded' &&
      branch == 'master'

  git-push-and-tag-cpp:
    image: uber/prototool:1.8.1
    commands:
    - cd generated/cpp
    - git config --global user.email "bot@estafette.io"
    - git config --global user.name "Estafette bot"
    - git add --all
    - git commit --allow-empty -m "v${ESTAFETTE_BUILD_VERSION}"
    - git push origin master
    - git tag --force v${ESTAFETTE_BUILD_VERSION}
    - git push --force origin v${ESTAFETTE_BUILD_VERSION}
    when:
      status == 'succeeded' &&
      branch == 'master'

  git-push-and-tag-ruby:
    image: uber/prototool:1.8.1
    commands:
    - cd generated/ruby
    - git config --global user.email "bot@estafette.io"
    - git config --global user.name "Estafette bot"
    - git add --all
    - git commit --allow-empty -m "v${ESTAFETTE_BUILD_VERSION}"
    - git push origin master
    - git tag --force v${ESTAFETTE_BUILD_VERSION}
    - git push --force origin v${ESTAFETTE_BUILD_VERSION}
    when:
      status == 'succeeded' &&
      branch == 'master'

  git-push-and-tag-objc:
    image: uber/prototool:1.8.1
    commands:
    - cd generated/objc
    - git config --global user.email "bot@estafette.io"
    - git config --global user.name "Estafette bot"
    - git add --all
    - git commit --allow-empty -m "v${ESTAFETTE_BUILD_VERSION}"
    - git push origin master
    - git tag --force v${ESTAFETTE_BUILD_VERSION}
    - git push --force origin v${ESTAFETTE_BUILD_VERSION}
    when:
      status == 'succeeded' &&
      branch == 'master'

  create-and-push-maven-package:
    image: maven:3.6.2-jdk-11-slim
    env:
      GH_USERNAME: estafette.secret(bh3seruHe6AVoqkx.lqvsI6Bv5Xa539D4_ZCL5xB3l9VC5U-JcO7HwpuP)
      GH_TOKEN: estafette.secret(Qi5PdAO8CEF2tnKz.n1qyTq164w7SD4ie0sItL_xdZLvIgszXZqXvAOW9D5HLuF9HhVVGneQRHFO_Ywfsq3LCcsghD-g=)
    commands:
    - mkdir -p ~/.m2
    - echo "<settings><servers><server><id>github</id><username>${GH_USERNAME}</username><password>${GH_TOKEN}</password></server></servers></settings>" > ~/.m2/settings.xml
    - cd generated/java
    - mvn -B versions:set -DnewVersion=${ESTAFETTE_BUILD_VERSION}
    - mvn -B deploy -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/estafette/estafette-ci-contracts-java

  create-and-push-nuget-package:
    image: mcr.microsoft.com/dotnet/core/sdk:3.0
    env:
      GH_USERNAME: estafette.secret(AnS3CfclpD5cJapI.pAoBajH2I8-FLwjYN-KJCv5kVB1Gpn6Wig==)
      GH_TOKEN: estafette.secret(Qi5PdAO8CEF2tnKz.n1qyTq164w7SD4ie0sItL_xdZLvIgszXZqXvAOW9D5HLuF9HhVVGneQRHFO_Ywfsq3LCcsghD-g=)
    commands:
    - cd generated/csharp
    - echo "<?xml version=\"1.0\" encoding=\"utf-8\"?><configuration><packageSources><add key=\"GitHub\" value=\"https://nuget.pkg.github.com/estafette/estafette-ci-contracts-csharp/index.json\" /></packageSources><packageSourceCredentials><GitHub><add key=\"Username\" value=\"${GH_USERNAME}\" /><add key=\"ClearTextPassword\" value=\"${GH_TOKEN}\" /></GitHub></packageSourceCredentials></configuration>" > nuget.config
    - dotnet pack --configuration Release -p:PackageVersion=${ESTAFETTE_BUILD_VERSION}
    - dotnet nuget push **/*.nupkg --source "GitHub"

  slack-notify:
    image: extensions/slack-build-status:dev
    workspace: estafette
    channels:
    - '#build-status'
    when:
      status == 'succeeded' ||
      status == 'failed'