builder:
  track: dev

labels:
  app-group: estafette-ci
  team: estafette-team
  language: proto

version:
  semver:
    major: 0
    minor: 0

stages:
  git-clone:
    image: extensions/git-clone:dev
    shallow: false

  prototool-lint:
    image: uber/prototool:1.9.0
    commands:
    - prototool lint

  prototool-compile:
    image: uber/prototool:1.9.0
    commands:
    - prototool compile

  # prototool-break-check:
  #   image: uber/prototool:1.9.0
  #   commands:
  #   - git branch --track master origin/master || true
  #   - prototool break check --git-branch master

  clone-language-repos:
    parallelStages:
      clone-golang:
        image: extensions/git-clone:dev
        repo: estafette-ci-protos-golang
        branch: master
        subdir: generated/golang/github.com/estafette/estafette-ci-protos-golang

      clone-java:
        image: extensions/git-clone:dev
        repo: estafette-ci-protos-java
        branch: master
        subdir: generated/java

      clone-csharp:
        image: extensions/git-clone:dev
        repo: estafette-ci-protos-csharp
        branch: master
        subdir: generated/csharp

      clone-python:
        image: extensions/git-clone:dev
        repo: estafette-ci-protos-python
        branch: master
        subdir: generated/python

      clone-cpp:
        image: extensions/git-clone:dev
        repo: estafette-ci-protos-cpp
        branch: master
        subdir: generated/cpp

      clone-ruby:
        image: extensions/git-clone:dev
        repo: estafette-ci-protos-ruby
        branch: master
        subdir: generated/ruby

      clone-objc:
        image: extensions/git-clone:dev
        repo: estafette-ci-protos-objc
        branch: master
        subdir: generated/objc

      clone-js:
        image: extensions/git-clone:dev
        repo: estafette-ci-protos-js
        branch: master
        subdir: generated/js

  remove-previous-generated-files:
    image: uber/prototool:1.9.0
    shell: /bin/bash
    commands:
    - shopt -s extglob
    - shopt -u dotglob
    - rm -rfv generated/golang/github.com/estafette/estafette-ci-protos-golang/!(".git")
    - rm -rfv generated/java/!(".git")
    - rm -rfv generated/csharp/!(".git")
    - rm -rfv generated/python/!(".git")
    - rm -rfv generated/ruby/!(".git")
    - rm -rfv generated/objc/!(".git")
    - rm -rfv generated/cpp/!(".git")
    - rm -rfv generated/js/!(".git")

  copy-source-files:
    image: uber/prototool:1.9.0
    shell: /bin/bash
    commands:
    - shopt -u dotglob
    - cp -rv source/golang/. generated/golang/github.com/estafette/estafette-ci-protos-golang
    - cp -rv source/java/. generated/java
    - cp -rv source/csharp/. generated/csharp
    - cp -rv source/python/. generated/python
    - cp -rv source/ruby/. generated/ruby
    - cp -rv source/objc/. generated/objc
    - cp -rv source/cpp/. generated/cpp
    - cp -rv source/js/. generated/js

  prototool-generate:
    image: uber/prototool:1.9.0
    commands:
    - prototool generate

  compile-language-repos:
    parallelStages:
      compile-golang:
        image: golang:1.14.0-alpine3.11
        commands:
        - cd generated/golang/github.com/estafette/estafette-ci-protos-golang
        - go test ./...

      compile-java:
        image: maven:3.6.3-jdk-11-slim
        shell: /bin/bash
        commands:
        - cd generated/java
        - mvn -B verify

      compile-csharp:
        image: mcr.microsoft.com/dotnet/core/sdk:3.1-alpine
        commands:
        - cd generated/csharp
        - dotnet test --configuration Release

      compile-python:
        image: python:3.8.2-alpine3.11
        commands:
        - cd generated/python
        - python -m compileall

  git-push-and-tag-language-repos:
    when:
      status == 'succeeded' && 
      branch == 'main'
    parallelStages:
      git-push-and-tag-golang:
        image: uber/prototool:1.9.0
        commands:
        - cd generated/golang/github.com/estafette/estafette-ci-protos-golang
        - git config --global user.email "protos-bot@estafette.io"
        - git config --global user.name "estafette-protos-bot"
        - git add --all
        - git commit --allow-empty -m "v${ESTAFETTE_BUILD_VERSION}"
        - git push origin master
        - git tag --force v${ESTAFETTE_BUILD_VERSION}
        - git push --force origin v${ESTAFETTE_BUILD_VERSION}

      git-push-and-tag-java:
        image: uber/prototool:1.9.0
        commands:
        - cd generated/java
        - git config --global user.email "protos-bot@estafette.io"
        - git config --global user.name "estafette-protos-bot"
        - git add --all
        - git commit --allow-empty -m "v${ESTAFETTE_BUILD_VERSION}"
        - git push origin master
        - git tag --force v${ESTAFETTE_BUILD_VERSION}
        - git push --force origin v${ESTAFETTE_BUILD_VERSION}

      git-push-and-tag-csharp:
        image: uber/prototool:1.9.0
        commands:
        - cd generated/csharp
        - git config --global user.email "protos-bot@estafette.io"
        - git config --global user.name "estafette-protos-bot"
        - git add --all
        - git commit --allow-empty -m "v${ESTAFETTE_BUILD_VERSION}"
        - git push origin master
        - git tag --force v${ESTAFETTE_BUILD_VERSION}
        - git push --force origin v${ESTAFETTE_BUILD_VERSION}

      git-push-and-tag-python:
        image: uber/prototool:1.9.0
        commands:
        - cd generated/python
        - git config --global user.email "protos-bot@estafette.io"
        - git config --global user.name "estafette-protos-bot"
        - git add --all
        - git commit --allow-empty -m "v${ESTAFETTE_BUILD_VERSION}"
        - git push origin master
        - git tag --force v${ESTAFETTE_BUILD_VERSION}
        - git push --force origin v${ESTAFETTE_BUILD_VERSION}

      git-push-and-tag-cpp:
        image: uber/prototool:1.9.0
        commands:
        - cd generated/cpp
        - git config --global user.email "protos-bot@estafette.io"
        - git config --global user.name "estafette-protos-bot"
        - git add --all
        - git commit --allow-empty -m "v${ESTAFETTE_BUILD_VERSION}"
        - git push origin master
        - git tag --force v${ESTAFETTE_BUILD_VERSION}
        - git push --force origin v${ESTAFETTE_BUILD_VERSION}

      git-push-and-tag-ruby:
        image: uber/prototool:1.9.0
        commands:
        - cd generated/ruby
        - git config --global user.email "protos-bot@estafette.io"
        - git config --global user.name "estafette-protos-bot"
        - git add --all
        - git commit --allow-empty -m "v${ESTAFETTE_BUILD_VERSION}"
        - git push origin master
        - git tag --force v${ESTAFETTE_BUILD_VERSION}
        - git push --force origin v${ESTAFETTE_BUILD_VERSION}

      git-push-and-tag-objc:
        image: uber/prototool:1.9.0
        commands:
        - cd generated/objc
        - git config --global user.email "protos-bot@estafette.io"
        - git config --global user.name "estafette-protos-bot"
        - git add --all
        - git commit --allow-empty -m "v${ESTAFETTE_BUILD_VERSION}"
        - git push origin master
        - git tag --force v${ESTAFETTE_BUILD_VERSION}
        - git push --force origin v${ESTAFETTE_BUILD_VERSION}

      git-push-and-tag-js:
        image: uber/prototool:1.9.0
        commands:
        - cd generated/js
        - git config --global user.email "protos-bot@estafette.io"
        - git config --global user.name "estafette-protos-bot"
        - git add --all
        - git commit --allow-empty -m "v${ESTAFETTE_BUILD_VERSION}"
        - git push origin master
        - git tag --force v${ESTAFETTE_BUILD_VERSION}
        - git push --force origin v${ESTAFETTE_BUILD_VERSION}

  push-packages-to-repos:
    # when: status == 'succeeded' && branch == 'main'
    parallelStages:
      create-and-push-maven-package:
        image: maven:3.6.3-jdk-11-slim
        shell: /bin/bash
        env:
          GH_USERNAME: estafette.secret(bh3seruHe6AVoqkx.lqvsI6Bv5Xa539D4_ZCL5xB3l9VC5U-JcO7HwpuP)
          GH_TOKEN: estafette.secret(Qi5PdAO8CEF2tnKz.n1qyTq164w7SD4ie0sItL_xdZLvIgszXZqXvAOW9D5HLuF9HhVVGneQRHFO_Ywfsq3LCcsghD-g=)
        commands:
        - mkdir -p ~/.m2
        - echo "<settings><servers><server><id>github</id><username>${GH_USERNAME}</username><password>${GH_TOKEN}</password></server></servers></settings>" > ~/.m2/settings.xml
        - cd generated/java
        - mvn -B versions:set -DnewVersion=${ESTAFETTE_BUILD_VERSION}
        - mvn -B deploy -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/estafette/estafette-ci-protos-java

      create-and-push-nuget-package:
        image: mcr.microsoft.com/dotnet/core/sdk:3.1-alpine
        env:
          GH_USERNAME: estafette.secret(AnS3CfclpD5cJapI.pAoBajH2I8-FLwjYN-KJCv5kVB1Gpn6Wig==)
          GH_TOKEN: estafette.secret(Qi5PdAO8CEF2tnKz.n1qyTq164w7SD4ie0sItL_xdZLvIgszXZqXvAOW9D5HLuF9HhVVGneQRHFO_Ywfsq3LCcsghD-g=)
        commands:
        - apk add curl
        - cd generated/csharp
        - dotnet pack --configuration Release -p:PackageVersion=${ESTAFETTE_BUILD_VERSION}
        - curl -vX PUT -u "${GH_USERNAME}:${GH_TOKEN}" -F package=@src/bin/Release/estafette-ci-protos.${ESTAFETTE_BUILD_VERSION}.nupkg https://nuget.pkg.github.com/estafette/

  slack-notify:
    image: extensions/slack-build-status:dev
    workspace: estafette
    channels:
    - '#build-status'
    when:
      status == 'succeeded' ||
      status == 'failed'