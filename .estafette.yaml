builder:
  track: dev

labels:
  app-group: estafette-ci
  team: estafette-team
  language: proto

version:
  semver:
    major: 0
    minor: 0

stages:
  git-clone:
    image: extensions/git-clone:dev
    shallow: false

  prototool-lint:
    image: uber/prototool:1.8.1
    commands:
    - prototool lint

  prototool-compile:
    image: uber/prototool:1.8.1
    commands:
    - prototool compile

  prototool-break-check:
    image: uber/prototool:1.8.1
    commands:
    - git branch --track master origin/master || true
    - prototool break check --git-branch master

  clone-golang:
    image: extensions/git-clone:dev
    repo: estafette-ci-contracts-golang
    branch: master
    subdir: generated/golang

  clone-java:
    image: extensions/git-clone:dev
    repo: estafette-ci-contracts-java
    branch: master
    subdir: generated/java

  clone-dotnet:
    image: extensions/git-clone:dev
    repo: estafette-ci-contracts-dotnet
    branch: master
    subdir: generated/dotnet

  prototool-generate:
    image: uber/prototool:1.8.1
    commands:
    - rm -rf generated/golang/**/*.go || true
    - rm -rf generated/java/**/*.java || true
    - rm -rf generated/dotnet/**/*.cs || true
    - prototool generate

  git-push-and-tag-golang:
    image: golang:1.13.1-alpine3.10
    commands:
    - apk add git
    - cd generated/golang
    - go mod tidy
    - go test ./...
    - git config --global user.email "bot@estafette.io"
    - git config --global user.name "Estafette bot"
    - git add --all
    - git commit --allow-empty -m "v${ESTAFETTE_BUILD_VERSION}"
    - git push origin master
    - git tag v${ESTAFETTE_BUILD_VERSION}
    - git push origin v${ESTAFETTE_BUILD_VERSION}
    when:
      status == 'succeeded' &&
      branch == 'master'

  git-push-and-tag-java:
    image: uber/prototool:1.8.1
    commands:
    - cd generated/java
    - git config --global user.email "bot@estafette.io"
    - git config --global user.name "Estafette bot"
    - git add --all
    - git commit --allow-empty -m "v${ESTAFETTE_BUILD_VERSION}"
    - git push origin master
    - git tag v${ESTAFETTE_BUILD_VERSION}
    - git push origin v${ESTAFETTE_BUILD_VERSION}
    when:
      status == 'succeeded' &&
      branch == 'master'

  git-push-and-tag-dotnet:
    image: uber/prototool:1.8.1
    commands:
    - cd generated/dotnet
    - git config --global user.email "bot@estafette.io"
    - git config --global user.name "Estafette bot"
    - git add --all
    - git commit --allow-empty -m "v${ESTAFETTE_BUILD_VERSION}"
    - git push origin master
    - git tag v${ESTAFETTE_BUILD_VERSION}
    - git push origin v${ESTAFETTE_BUILD_VERSION}
    when:
      status == 'succeeded' &&
      branch == 'master'

  slack-notify:
    image: extensions/slack-build-status:dev
    workspace: estafette
    channels:
    - '#build-status'
    when:
      status == 'succeeded' ||
      status == 'failed'